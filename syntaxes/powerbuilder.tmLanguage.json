{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "PowerBuilder",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comment"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.pb",
				"match": "\\b(alias|and|autoinstantiate|call|case|catch|choose|close|commit|connect|constant|continue|create|cursor|declare|delete|describe|descriptor|destory|disconnect|do|dynamic|else|elseif|end|enumerated|execute|exit|external|false|fetch|finally|first|for|forward|from|global|goto|halt|if|immediate|indirect|insert|into|intrinsic|is|last|library|loop|namespace|native|next|not|of|on|open|or|parent|post|prepare|prior|private|privateread|privatewrite|procedure|protected|protectedread|protectedwrite|prototypes|public|readonly|ref|return|rollback|rpcfunc|select|selectblob|shared|static|step|subroutine|super|system|systemread|systemwrite|then|this|throw|throws|to|trigger|true|try|type|until|update|updateblob|using|variables|while|with|within|xor|_debug|public)\\b"
			},
			{
				"name": "keyword.other.pb",
				"match": "(function|event)"
			},
			{
				"name": "keyword.types.pb",
				"match": "(any|Blob|Boolean|Byte|Char|Character|Date|DateTime|Decimal|Dec|Double|Integer|Int|Long|LongLong|Real|String|Time|UnsignedInteger|UnsignedInt|UInt|UnsignedLong|ULong)"
			}]
		},
		"strings": {
			"name": "string.quoted.double.pb",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.pb",
					"match": "\\\\."
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.block.documentation.pb",
					"begin": "/\\*\\*(?!/)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.pb"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.pb"
						}
					},
					"patterns": [
						{
							"include": "#docblock"
						}
					]
				},
				{
					"name": "comment.block.pb",
					"begin": "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.pb"
						},
						"2": {
							"name": "storage.type.internaldeclaration.pb"
						},
						"3": {
							"name": "punctuation.decorator.internaldeclaration.pb"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.pb"
						}
					}
				}
				]
		}
	},
	"scopeName": "source.sru"
}